/*
    ==== GRID ====
*/*
{
    box-sizing: border-box;
}

*:before,
*:after
{
    box-sizing: border-box;
}

.container
{
    width: 100%;
    margin-right: auto;
    margin-left: auto;
    padding-right: 10px;
    padding-left: 10px;
}

.container:before,
.container:after
{
    display: table;

    content: ' ';
}

.container:after
{
    clear: both;
}

.container-fluid
{
    margin-right: auto;
    margin-left: auto;
    padding-right: 10px;
    padding-left: 10px;
}

.container-fluid:before,
.container-fluid:after
{
    display: table;

    content: ' ';
}

.container-fluid:after
{
    clear: both;
}

.row
{
    margin-right: -10px;
    margin-left: -10px;
}

.row:before,
.row:after
{
    display: table;

    content: ' ';
}

.row:after
{
    clear: both;
}

.tab-1,
.lap-1,
.desk-1,
.all-2,
.tab-2,
.lap-2,
.desk-2,
.lg-2,
.all-3,
.tab-3,
.lap-3,
.desk-3,
.lg-3,
.all-4,
.tab-4,
.lap-4,
.desk-4,
.lg-4,
.all-5,
.tab-5,
.lap-5,
.desk-5,
.lg-5,
.all-6,
.tab-6,
.lap-6,
.desk-6,
.lg-6,
.all-7,
.tab-7,
.lap-7,
.desk-7,
.lg-7,
.all-8,
.tab-8,
.lap-8,
.desk-8,
.lg-8,
.all-9,
.tab-9,
.lap-9,
.desk-9,
.lg-9,
.all-10,
.tab-10,
.lap-10,
.desk-10,
.lg-10,
.all-11,
.tab-11,
.lap-11,
.desk-11,
.lg-11,
.all-12,
.tab-12,
.lap-12,
.desk-12,
.lg-12
{
    position: relative;

    min-height: 1px;
    padding-right: 10px;
    padding-left: 10px;
}

.all-1,
.all-2,
.all-3,
.all-4,
.all-5,
.all-6,
.all-7,
.all-8,
.all-9,
.all-10,
.all-11,
.all-12
{
    float: left;
}

.all-1
{
    width: 8.33333%;
}

.all-2
{
    width: 16.66667%;
}

.all-3
{
    width: 25%;
}

.all-4
{
    width: 33.33333%;
}

.all-5
{
    width: 41.66667%;
}

.all-6
{
    width: 50%;
}

.all-7
{
    width: 58.33333%;
}

.all-8
{
    width: 66.66667%;
}

.all-9
{
    width: 75%;
}

.all-10
{
    width: 83.33333%;
}

.all-11
{
    width: 91.66667%;
}

.all-12
{
    width: 100%;
}/*! normalize.css v3.0.1 | MIT License | git.io/normalize */html
{
    font-family: sans-serif;

    height: 100%;

        -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary
{
    display: block;
}

audio,
canvas,
progress,
video
{
    display: inline-block;

    vertical-align: baseline;
}

audio:not([controls])
{
    display: none;

    height: 0;
}

[hidden],
template
{
    display: none;
}

a
{
    transition: color .2s, background .2s, border-color .2s;
    text-decoration: none;

    background: transparent;
}

a:active,
a:focus,
a:hover
{
    text-decoration: none;

    outline: 0;
}

abbr[title]
{
    border-bottom: 1px dotted;
}

b,
strong
{
    font-weight: bold;
}

dfn
{
    font-style: italic;
}

small
{
    font-size: 80%;
}

sub,
sup
{
    font-size: 75%;
    line-height: 0;

    position: relative;

    vertical-align: baseline;
}

sup
{
    top: -.5em;
}

sub
{
    bottom: -.25em;
}

img
{
    max-width: 100%;

    vertical-align: top;

    border: 0;
}

svg:not(:root)
{
    overflow: hidden;
}

hr
{
    height: 0;
}

pre
{
    overflow: auto;
}

code,
kbd,
pre,
samp
{
    font-family: monospace, monospace;
    font-size: 1em;
}

button,
input,
optgroup,
select,
textarea
{
    font: inherit;

    margin: 0;

    color: inherit;
}

button
{
    overflow: visible;
}

button,
select
{
    text-transform: none;
}

button,
html input[type='button'],
input[type='reset'],
input[type='submit']
{
    cursor: pointer;

    -webkit-appearance: button;
}

button[disabled],
html input[disabled]
{
    cursor: default;
}

button::-moz-focus-inner,
input::-moz-focus-inner
{
    padding: 0;

    border: 0;
}

input[type='checkbox'],
input[type='radio']
{
    margin: 0;
    padding: 0;
}

input[type='number']::-webkit-inner-spin-button,
input[type='number']::-webkit-outer-spin-button
{
    height: auto;
}

input[type='search']::-webkit-search-cancel-button,
input[type='search']::-webkit-search-decoration
{
    -webkit-appearance: none;
}

:invalid
{
    box-shadow: none;
}

:-moz-submit-invalid
{
    box-shadow: none;
}

:-moz-ui-invalid
{
    box-shadow: none;
}

::-ms-clear
{
    display: none;
}

button::-moz-focus-inner,
input[type='reset']::-moz-focus-inner,
input[type='button']::-moz-focus-inner,
input[type='submit']::-moz-focus-inner,
input[type='submit']::-moz-focus-inner,
input[type='file'] > input[type='button']::-moz-focus-inner
{
    border: none;
}

*
{
       -moz-appearance: none;
    -webkit-appearance: none;
}

legend
{
    padding: 0;

    border: 0;
}

textarea
{
    overflow: auto;

    resize: none;
}

optgroup
{
    font-weight: bold;
}

table
{
    border-spacing: 0;
    border-collapse: collapse;
}

td,
th
{
    padding: 0;
}

html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video
{
    margin: 0;
    padding: 0;

    vertical-align: baseline;

    border: 0;
}

ol,
ul
{
    list-style: none;
}

blockquote,
q
{
    quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after
{
    content: '';
    content: none;
}

*
{
    outline: 0;
}

.clearfix:after
{
    display: block;
    clear: both;

    content: '';
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active
{
    box-shadow: 0 0 0 100px #fff inset;
}

*
{
    box-sizing: border-box;
    margin: 0;
    padding: 0;

    outline: none !important;
}

html,
body
{
    width: 100%;
}

body
{
    font: 12px/18px sans-serif;

    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

main
{
    position: relative;
}

a
{
    cursor: pointer;
    text-decoration: none;
}

img
{
    max-width: 100%;
    height: auto;
}

ul
{
    list-style: none;
}

address
{
    font-style: normal;
}

table
{
    width: 100%;

    border-collapse: collapse;
}

::-webkit-inner-spin-button
{
    -webkit-appearance: none;
}

::-webkit-outer-spin-button
{
    -webkit-appearance: none;
}

::-ms-clear
{
    display: none;
}

input[type='text'],
input[type='number'],
input[type='email'],
input[type='search'],
input[type='password'],
input[type='tel'],
input[type='submit'],
button,
select,
textarea
{
    width: 100%;

    cursor: pointer;

    border: none;
    border-radius: 0;

    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
}

::-moz-placeholder
{
    transition: opacity .3s ease;

    opacity: 1;
}

:-ms-input-placeholder
{
    transition: opacity .3s ease;

    opacity: 1;
}

::-webkit-input-placeholder
{
    transition: opacity .3s ease;

    opacity: 1;
}

:focus::-moz-placeholder
{
    opacity: 0;
}

:focus:-ms-input-placeholder
{
    opacity: 0;
}

:focus::-webkit-input-placeholder
{
    opacity: 0;
}

select::-ms-expand
{
    /* for IE 11 */
    display: none;
}

textarea
{
    resize: none;
}

input[type='radio'],
input[type='checkbox']
{
    position: absolute;
    top: 0;
    left: 0;

    display: block;

    width: 0;
    height: 0;

    opacity: 0;
}

label
{
    cursor: pointer;
}

html
{
    box-sizing: border-box;
}

*,
*:before,
*:after
{
    box-sizing: inherit;
}

*
{
    max-height: 1000000px;
    margin: 0;
    padding: 0;
}

ul,
ol,
dl,
p,
h1,
h2,
h3,
h4,
h5,
h6,
address,
form,
table,
blockquote,
applet,
embed,
object,
iframe,
frameset,
mejs-container
{
    margin: 0 0 14px;
}

html,
body,
div,
span,
applet,
embed,
object,
iframe,
frameset,
p,
q,
blockquote,
sub,
sup,
a,
abbr,
acronym,
font,
img,
small,
center,
h1,
h2,
h3,
h4,
h5,
h6,
b,
strong,
big,
u,
ins,
i,
cite,
em,
var,
dfn,
address,
s,
strike,
del,
dl,
dt,
dd,
ol,
ul,
li,
pre,
code,
kbd,
samp,
tt,
fieldset,
legend,
form,
label,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section,
summary,
time,
mark,
audio,
video
{
    border: 0;
    background: none;
}

body
{
    font: 12px/1.2 Arial, Helvetica, sans-serif;

    overflow-y: scroll;

    color: #333;
    background: #fff;

    -webkit-text-size-adjust: 100%;
        -ms-text-size-adjust: none;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
nav,
section,
summary
{
    display: block;
}

a
{
    text-decoration: underline;

    color: #000;
    outline: none;
}

a:hover
{
    text-decoration: none;
}

img
{
    max-width: 100%;
    height: auto;
}

video,
iframe,
object,
embed
{
    max-width: 100%;
}

input,
textarea,
select
{
    font: 100% Arial, Helvetica, sans-serif;

    vertical-align: middle;

    color: #000;
}

textarea
{
    overflow: auto;

    resize: vertical;
    vertical-align: top;
}

input[type='text'],
input[type='tel'],
input[type='email'],
input[type='url'],
input[type='password'],
input[type='search'],
textarea
{
    margin: 0;
    padding: 3px 4px;

    border: 1px solid #ccc;
    background: #fff;

    -webkit-appearance: none;
}

label
{
    vertical-align: middle;
}

button::-moz-focus-inner,
input::-moz-focus-inner
{
    padding: 0;

    border: 0;
}

button,
html input[type='button'],
input[type='reset'],
input[type='submit']
{
    cursor: pointer;

    -webkit-appearance: button;
}

input[type='search']
{
    -webkit-appearance: none;
}

input[type='search']::-webkit-search-cancel-button
{
    -webkit-appearance: none;
}

input[type='search']::-webkit-search-decoration
{
    display: none;
}

h1,
h2,
h3,
h4,
h5,
h6,
b,
strong,
th
{
    font-weight: bold;
}

h1
{
    font-size: 200%;
}

h2
{
    font-size: 150%;
}

h3
{
    font-size: 120%;
}

h4
{
    font-size: 110%;
}

h5
{
    font-size: 100%;
}

h6
{
    font-size: 90%;
}

i,
cite,
em,
var,
dfn,
address
{
    font-style: italic;
}

u,
ins
{
    text-decoration: underline;
}

s,
strike,
del
{
    text-decoration: line-through;
}

blockquote,
blockquote:before,
blockquote:after,
q,
q:before,
q:after
{
    quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after
{
    content: '';
}

blockquote
{
    margin-left: 14px;
    padding-left: 10px;

    border-left: 4px solid #ccc;
}

sub,
sup
{
    font-size: 75%;
    line-height: 0;

    position: relative;

    vertical-align: baseline;
}

sup
{
    top: -.5em;
}

sub
{
    bottom: -.25em;
}

table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td
{
    border-spacing: 0;
    border-collapse: collapse;
}

th,
td
{
    padding: 3px 7px;

    text-align: left;
    vertical-align: top;

    border: 1px solid #ccc;
}

th
{
    text-align: center;
    vertical-align: middle;

    border-color: #999;
}

ul
{
    margin-left: 1px;
}

ul,
ol
{
    padding-left: 3em;
}

ul ul,
ul ol,
ol ul,
ol ol
{
    margin: 0;
    padding-left: 3em;
}

ul > li
{
    list-style-type: disc;
}

dl dt
{
    font-weight: bold;

    float: left;
    clear: left;

    padding-right: 4px;
}

pre
{
    overflow: auto;

    max-width: 100%;
}

.widget
{
    overflow: hidden;

    margin-bottom: 14px;
}

.widget ul
{
    padding-left: 2em;
}

.widget select
{
    min-width: 150px;
}

.comment-form textarea,
.comment-form input[type='text'],
.search-form input[type='search']
{
    width: 300px;
    margin: 0 4px 0 0;
}

.post-password-form label
{
    vertical-align: top;
}

.post-password-form input[type='password'],
.search-form input[type='search']
{
    width: 150px;
}

.commentlist
{
    margin: 0 0 14px;
}

.commentlist .edit-link
{
    margin: 0;
}

.commentlist-item .commentlist-item
{
    padding: 0 0 0 3em;
}

.comment,
.commentlist-holder
{
    overflow: hidden;
}

.commentlist-item .commentlist-item,
.commentlist-item + .commentlist-item
{
    padding-top: 14px;
}

.commentlist .avatar-holder
{
    float: left;

    margin: 0 14px 4px 0;
}

.comment-form label
{
    display: block;

    padding-bottom: 4px;
}

.comment-form textarea
{
    overflow: auto;

    height: 120px;
    min-height: 120px;
    margin: 0;
    padding: 3px 4px;
}

.widget_calendar #next
{
    text-align: right;
}

.navigation
{
    overflow: hidden;

    margin: 0 0 14px;
}

.navigation .next
{
    float: left;
}

.navigation .prev
{
    float: right;
}

.wp-caption
{
    clear: both;

    max-width: 98%;
    padding: 5px;

    border: 1px solid #ccc;
}

.wp-caption img
{
    vertical-align: top;
}

.wp-caption p
{
    margin: 10px 0 0;
}

figure.aligncenter
{
    margin: 0 auto 10px;
}

img.aligncenter
{
    display: block;

    margin: 0 auto 10px;
}

.alignleft
{
    float: left;

    margin: 0 10px 10px 0;
}

.alignright
{
    float: right;

    margin: 0 0 10px 10px;
}

#wrapper
{
    width: 1024px;
    margin: 0 auto;
}

#main:before,
#main:after
{
    display: table;

    content: ' ';
}

#main:after
{
    clear: both;
}

#content
{
    float: left;

    width: 70%;
}

#content:only-child
{
    float: none;

    width: 100%;
}

#sidebar
{
    float: right;

    width: 25%;
}

#sidebar #wp-calendar
{
    width: 100%;
}

.no-scroll
{
    position: relative;

    overflow: hidden;

    height: 100vh;
}

@font-face
{
    font-family: 'font-family-name';font-weight: normal;font-style: normal;src: url('../fonts/font-name.eot');src: url('../fonts/font-name.eot?#iefix') format('embedded-opentype'), url('../fonts/font-name.woff2') format('woff2'), url('../fonts/font-name.woff') format('woff'), url('../fonts/font-name.ttf') format('truetype'), url('../fonts/font-name.svg#encode_sans_compressedregular') format('svg');
}

@media (min-width: 640px)
{
    .container
    {
        width: 100%;
    }
}

@media (min-width: 768px)
{
    .container
    {
        width: 100%;
    }

    .tab-1,
    .tab-2,
    .tab-3,
    .tab-4,
    .tab-5,
    .tab-6,
    .tab-7,
    .tab-8,
    .tab-9,
    .tab-10,
    .tab-11,
    .tab-12
    {
        float: left;
    }

    .tab-1
    {
        width: 8.33333%;
    }

    .tab-2
    {
        width: 16.66667%;
    }

    .tab-3
    {
        width: 25%;
    }

    .tab-4
    {
        width: 33.33333%;
    }

    .tab-5
    {
        width: 41.66667%;
    }

    .tab-6
    {
        width: 50%;
    }

    .tab-7
    {
        width: 58.33333%;
    }

    .tab-8
    {
        width: 66.66667%;
    }

    .tab-9
    {
        width: 75%;
    }

    .tab-10
    {
        width: 83.33333%;
    }

    .tab-11
    {
        width: 91.66667%;
    }

    .tab-12
    {
        width: 100%;
    }
}

@media (min-width: 1025px)
{
    .container
    {
        width: 960px;
        padding-right: 15px;
        padding-left: 15px;
    }

    .lap-1,
    .lap-2,
    .lap-3,
    .lap-4,
    .lap-5,
    .lap-6,
    .lap-7,
    .lap-8,
    .lap-9,
    .lap-10,
    .lap-11,
    .lap-12
    {
        float: left;
    }

    .lap-1
    {
        width: 8.33333%;
    }

    .lap-2
    {
        width: 16.66667%;
    }

    .lap-3
    {
        width: 25%;
    }

    .lap-4
    {
        width: 33.33333%;
    }

    .lap-5
    {
        width: 41.66667%;
    }

    .lap-6
    {
        width: 50%;
    }

    .lap-7
    {
        width: 58.33333%;
    }

    .lap-8
    {
        width: 66.66667%;
    }

    .lap-9
    {
        width: 75%;
    }

    .lap-10
    {
        width: 83.33333%;
    }

    .lap-11
    {
        width: 91.66667%;
    }

    .lap-12
    {
        width: 100%;
    }
}

@media (min-width: 1200px)
{
    .container
    {
        width: 1170px;
    }

    .desk-1,
    .desk-2,
    .desk-3,
    .desk-4,
    .desk-5,
    .desk-6,
    .desk-7,
    .desk-8,
    .desk-9,
    .desk-10,
    .desk-11,
    .desk-12
    {
        float: left;
    }

    .desk-1
    {
        width: 8.33333%;
    }

    .desk-2
    {
        width: 16.66667%;
    }

    .desk-3
    {
        width: 25%;
    }

    .desk-4
    {
        width: 33.33333%;
    }

    .desk-5
    {
        width: 41.66667%;
    }

    .desk-6
    {
        width: 50%;
    }

    .desk-7
    {
        width: 58.33333%;
    }

    .desk-8
    {
        width: 66.66667%;
    }

    .desk-9
    {
        width: 75%;
    }

    .desk-10
    {
        width: 83.33333%;
    }

    .desk-11
    {
        width: 91.66667%;
    }

    .desk-12
    {
        width: 100%;
    }
}

@media (min-width: 1600px)
{
    .container
    {
        width: 1400px;
    }

    .lg-1,
    .lg-2,
    .lg-3,
    .lg-4,
    .lg-5,
    .lg-6,
    .lg-7,
    .lg-8,
    .lg-9,
    .lg-10,
    .lg-11,
    .lg-12
    {
        float: left;
    }

    .lg-1
    {
        width: 8.33333%;
    }

    .lg-2
    {
        width: 16.66667%;
    }

    .lg-3
    {
        width: 25%;
    }

    .lg-4
    {
        width: 33.33333%;
    }

    .lg-5
    {
        width: 41.66667%;
    }

    .lg-6
    {
        width: 50%;
    }

    .lg-7
    {
        width: 58.33333%;
    }

    .lg-8
    {
        width: 66.66667%;
    }

    .lg-9
    {
        width: 75%;
    }

    .lg-10
    {
        width: 83.33333%;
    }

    .lg-11
    {
        width: 91.66667%;
    }

    .lg-12
    {
        width: 100%;
    }
}

@media (min-width: 1800px)
{
    .container
    {
        width: 1700px;
    }
}

@media only screen and (max-width: 767px)
{
    .commentlist-item .commentlist-item
    {
        padding: 0;
    }
}

@keyframes some-animation
{
    0%
    {
    }

    100%
    {
    }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
