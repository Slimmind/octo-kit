.wrapper {
  width: 100%;
  max-width: 960px;
  margin: 0 auto;
  padding: 0 5px;
  background: #CDCDCD;
}
.container {
  margin-left: auto;
  margin-right: auto;
  padding-left: $gutter + px;
  padding-right: $gutter + px;
  .row {
    margin-left: -$gutter + px;
    margin-right: -$gutter + px;
    overflow: hidden;
    & > .col {
      position: relative;
      min-height: 1px;
      float: left;
      padding-left: $gutter + px;
      padding-right: $gutter + px;
      box-sizing: border-box;
      transition: all .7s ease;
    }
  }
}
@mixin centered {
  margin-left: auto !important;
  margin-right: auto !important;
  float: none !important;
}
@mixin uncentered {
  margin-left: initial !important;
  margin-right: initial !important;
  float: initial !important;
}

$width: 100;
$gutter: 10;
$columns: 12;

//$mob: 1px;
//$xmob: 375px; //iPhone 6
//$xxmob: 414px; //iPhone 6+
//$tab: 768px;
//$lap: 1024px;
//$desk: 1280px; // MacBook 13'
//$xdesk: 1440px; // MacBook 15'
//$xxdesk: 1600px;
//$xxxdesk: 2560px; //iMac '27

$resolutions: 1px, 375px, 414px, 768px, 1024px, 1280px, 1440px, 1600px, 2560px;

$sizeList: mob xmob xxmob tab lap desk xdesk xxdesk xxxdesk;
@each $size in $sizeList {
  @each $resolution in $resolutions {
    @media all and (min-width: $resolution) {
      @for $i from 1 through $columns {
        $column-width: (($width / $columns) * $i) * 1%;
        .#{$size}-#{$i} {
          width: $column-width;
        }
        .#{$size}-offset-#{$i} {
          margin-left: $column-width;
        }
        .#{$size}-push-#{$i} {
          left: $column-width;
        }
        .#{$size}-pull-#{$i} {
          right: $column-width;
        }
        .#{$size}-centered {
          @include centered;
        }
        .#{$size}-uncentered {
          @include uncentered;
        }
      }
    }
  }
}
